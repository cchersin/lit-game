{"version":3,"file":"winner-page.js","sourceRoot":"","sources":["../../src/winner-page.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAExC,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAG3C,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,UAAU;IAUxC;QACE,KAAK,EAAE,CAAC;QAVV,gBAAW,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;QAWzB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,aAAa,CAAC,KAAU;QACtB,MAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;QAEvC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAEjC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,QAAQ;QACN,YAAY,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,EAAE;YAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAExB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;gBAC1C,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;YACzB,CAAC;YAED,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QACtD,OAAO,IAAI,CAAA;;;;YAIH,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAA;kBACvB,KAAK,CAAC,UAAU,KAAK,KAAK,CAAC,IAAI;WACtC,CAAC;;;KAGP,CAAC;IACJ,CAAC;IAGD,MAAM;QACJ,OAAO,IAAI,CAAA;;sBAEO,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM;2BAC1C,IAAI,CAAC,aAAa;WAClC,IAAI,CAAC,iBAAiB,EAAE;;KAE9B,CAAC;IACJ,CAAC;;AAzDM,iBAAM,GAAG,GAAG,CAAA;;;;;GAKlB,AALY,CAKX;AARS,UAAU;IADtB,aAAa,CAAC,aAAa,CAAC;GAChB,UAAU,CA6DtB","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport { Router } from '@vaadin/router';\n\nimport { Game } from './game.js';\nimport { StoreService } from './store-service.js';\n\n@customElement('winner-page')\nexport class WinnerPage extends LitElement {\n  currentGame = new Game('');\n  \n  static styles = css`\n  main {\n    background-color: red;\n    height: 100%;\n  }\n  `;\n\n  constructor() {\n    super();\n    this.loadGame();\n  }\n\n  handleNewGame(event: any) {\n    const gameName = new Date().toString();\n \n    const game = new Game(gameName);\n\n    game.init(localStorage.userName);\n  \n    StoreService.saveGame(game);\n  }\n\n  loadGame() {\n    StoreService.onGameUpdate((game) => {\n        this.currentGame = game;\n\n        if (this.currentGame.status === 'pending') {\n          Router.go('/starting');\n        } \n\n        this.requestUpdate();\n    });\n  }\n\n  renderLeaderboard() {\n    const leaderboard = this.currentGame.getLeaderboard();\n    return html`\n      <div class=\"leaderboard\">\n        <h3>Classifica</h3>\n        <ul>\n          ${leaderboard.map(entry => html`\n            <li>${entry.playerName}: ${entry.wins} vittorie</li>\n          `)}\n        </ul>\n      </div>\n    `;\n  }\n\n \n  render() {\n    return html`\n      <main class=\"game\">\n        <span>User: ${localStorage.userName}${this.currentGame.status}</span>\n         <button @click=\"${this.handleNewGame}\">New game</button>\n         ${this.renderLeaderboard()}\n      </main>\n    `;\n  }\n}\n"]}