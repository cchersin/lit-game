{"version":3,"file":"game-card.js","sourceRoot":"","sources":["../../src/game-card.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAGrD,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,UAAU;IAAjC;;QACuB,OAAE,GAAG,EAAE,CAAC;QACR,gBAAW,GAAG,EAAE,CAAC;QACjB,UAAK,GAAG,EAAE,CAAC;QACX,UAAK,GAAG,EAAE,CAAC;QACX,oBAAe,GAAG,EAAE,CAAC;QACrB,SAAI,GAAG,EAAE,CAAC;QACV,WAAM,GAAG,EAAE,CAAC;QACZ,eAAU,GAAG,OAAO,CAAC;IA+EnD,CAAC;IA7BC,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,iBAAiB,EAAE;YACpD,MAAM,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;YACvB,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC,CAAC;IACN,CAAC;IAED,cAAc;QACZ,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAE5C,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE,CAAC;YACtB,OAAO,IAAI,CAAA;gBACD,CAAC,CAAC,CAAC,CAAC;+GAC2F,IAAI,CAAC,KAAK;0CAC/E,CAAC,CAAC,CAAC,CAAC;OACvC,CAAC;QACJ,CAAC;QAED,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;uBACQ,IAAI,CAAC,eAAe,YAAY,IAAI,CAAC,WAAW,iBAAiB,IAAI,CAAC,IAAI,cAAc,IAAI,CAAC,UAAU,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;WACnJ,IAAI,CAAC,cAAc,EAAE;;GAE7B,CAAC;IACF,CAAC;;AA3EM,eAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA6CpB,AA7Cc,CA6Cb;AAvD4B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;oCAAS;AACR;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;6CAAkB;AACjB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;uCAAY;AACX;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;uCAAY;AACX;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iDAAsB;AACrB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;sCAAW;AACV;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;wCAAa;AACZ;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;4CAAsB;AARtC,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CAuFpB","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\n\n@customElement('game-card')\nexport class GameCard extends LitElement {\n  @property({ type: String }) id = '';\n  @property({ type: String }) description = '';\n  @property({ type: String }) value = '';\n  @property({ type: String }) color = '';\n  @property({ type: String }) backgroundColor = '';\n  @property({ type: String }) left = '';\n  @property({ type: String }) zindex = '';\n  @property({ type: String }) isselected = \"false\";\n\n\n  static styles = css`\n  .card {\n    height: 400px;\n    width: 250px;\n    padding-top: 20px;\n    padding-left: 22px;\n    padding-right: 22px;\n    border-radius: 10px;\n  }\n\n  .card:first-letter {\n    text-transform: uppercase;\n  }\n\n  .black {\n    background-color: red;\n    color: black;\n    font-size: 37px;\n    font-family: \"gandur-new\", sans-serif;\n    font-weight: 300;\n    font-style: normal;\n    line-height: 42px;\n    rotate: -5deg;\n    margin: auto;\n    margin-top: 20px;\n  }\n\n  .white {\n    background-color: white;\n    color: black;\n    font-size: 25px;\n    rotate: 10deg;\n    border: 1px black solid;\n    display: inline-block;\n    position: absolute;\n    margin-top: -200px;\n  }\n\n  .card p {\n    margin: 0px;\n  }\n\n  .black .point {\n    display: none;\n  }\n`;\n\n  handleClick() {\n    this.dispatchEvent(new CustomEvent('game-card-click', {\n      detail: { id: this.id },\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  getDescription() {\n    const a = this.description.split('______ ');\n\n    if (this.value !== '') {\n      return html`\n        <span>${a[0]}</span>\n        <span style=\"font-weight: 400; font-family: sans-serif; font-size: 30px; text-decoration: underline\">${this.value}</span>\n        <span style=\"margin-left: -6px\">${a[1]}</span>\n      `;\n    }\n\n    return this.description;\n  }\n\n  render() {\n    return html`\n    <div class=\"card ${this.backgroundColor}\" @click=${this.handleClick} style=\"left: ${this.left}; z-index: ${this.isselected === \"true\" ? 1000 : this.zindex};\">\n      <p>${this.getDescription()}<span class=\"point\">.</span></p>\n    </div>\n  `;\n  }\n}\n"]}